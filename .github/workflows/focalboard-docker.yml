name: focalboard-docker

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform Action'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - terminate

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Terraform ${{ github.event.inputs.action }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false  # Important for JSON output

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::211125784755:role/uc1-alb-oidc
          aws-region: us-east-1

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform
        run: terraform validate

      - name: Format Terraform code
        run: terraform fmt -recursive

      - name: Terraform Plan
        if: github.event.inputs.action == 'apply'
        run: terraform plan -out=tfplan.binary

      - name: Convert Plan to JSON
        if: github.event.inputs.action == 'apply'
        run: terraform show -json tfplan.binary > tfplan.json

      - name: Setup OPA
        uses: open-policy-agent/setup-opa@v2
        with:
          version: latest

      - name: Run OPA Policy Check
        if: github.event.inputs.action == 'apply'
        run: |
          result=$(opa eval --input tfplan.json --data opa-policies/ --format raw "data.terraform.deny")
          echo "OPA Result: $result"
          if [[ "$result" != "[]" ]]; then
            echo "‚ùå Policy violations found. Failing the workflow."
            echo "$result"
            exit 1
          fi

      - name: Terraform Apply
        if: github.event.inputs.action == 'apply'
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: github.event.inputs.action == 'terminate'
        run: terraform destroy -auto-approve
